[copy of man/xlsReadWrite-package.Rd - maybe out of date]

Description

   1. Overview
   2. RUnit tests
   3. CRAN/pro version
   4. Compile and downloads
   5. Links and contact 

   
1. Overview

xlsReadWrite is a packages which allows to read and write Excel files. Currently supported is the .xls (BIFF8) file format.

Getting started

    * check out read.xls, write.xls and xls.getshlib
    * help(package = "xlsReadWrite") gives information on the package

Why xlsReadWrite?

    * it is fast
    * well documented and (RUnit) tested
    * the package does not have any external dependencies
    * it has a nice simple interface and just works fine since ~4 years 

On the less rosy side: xlsReadWrite still is windows only and uses proprietary 3rd party code (which means only our own code is, and can be, free). The package is written in Pascal, a very nice language, but a bit obscure in the R world.

Other solutions and future

xlsReadWrite is not the only game in town; we know of the following packages (dependencies mentioned in brackets): RODBC (drivers), gdata (Perl), RExcel or COM (Excel), dataframes2xls (Python), xlsx (Apache POI, Java). Then, of course, using plain old .csv files (-) and finally our own xlsReadWritePro shareware package, see below.

xlsReadWrite is mature and no big changes are planned. Some internal refactoring would be beneficial and some features could be backported from the pro version. In 2011 Delphi should be released for Mac, Linux and Win64, and we plan to support these platforms eventually. The underlying library is being developed for .xlsx and we are looking forward to it.


2. RUnit tests

There are more than 50 unit tests which should cover all aspects of the package and ensure and maintain code quality. The tests also serve as an extended reference going beyond the examples.

You can easily run the tests on your system: the RUnit test files are located at
R_HOME/library/xlsReadWrite/unitTest.
Please have a look at the file debug.template.R for details (basically: source file, copy/paste testsuite code).
3. CRAN/pro version

CRAN

Besides the regular xlsReadWrite package there is a special cran version. Reason (copied from the cran version startup message):

        "BACKGROUND: Our own xlsReadWrite code is free, but we also use proprietary code\n"
        "(Flexcel, tmssoftware.com) which can only be distributed legally in precompiled,\n"
        "i.e. binary form. As CRAN 'generally does not accept submissions of precompiled\n"
        "binaries due to security reasons' we only provide a placeholder and you can\n"
        "download the binary shlib separately.\n\n";
    

xlsReadWritePro

The pro version is our second attempt and goes further than the free version:

    * append data to existing files
    * work with in-memory Excel 'files' (called xls-obj)
    * manage sheets (select, insert, copy, rename, delete, hide, info, list)
    * support images (add, delete, count, list, export, info)
    * address confined data areas (rows, cols, from, to, (named) ranges, cells)
    * read and write formula values
    * get file and sheet related info
    * more date time helper functions
    * formal support 

By purchasing the xlsReadWritePro shareware version you help support our development and maintenance effort. We are grateful that quite some people and companies did and both, the free and the pro version shall benefit. The trial (http://www.swissr.org) is free and the two versions do coexist just fine. So, why not check out xlsReadWritePro now and see for yourself?


4. Compile and downloads

Compile

Prerequisites: Delphi 2007 and Flexcel (http://www.tmssoftware.com, a high-quality code library for the core Excel-work).

Then follow these steps:

   1. Clone the github repo (see below) and initialize the RPascal submodule
   2. Adapt paths in 'include.mk'
   3. Regarding Flexcel code:
          * in FLXCOMPILER.INC: disable the FLEXCEL define, e.g. '.$DEFINE FLEXCEL'
          * 'src/pas/vFlexcelCommits.txt' has the currently used Flexcel version 
   4. Run 'make' target in 'cmd.exe' (system path will be modified from within our Makefile; running 'make' from 'Terminator' and with cygwin only didn't work out (so far))
   5. Alternatively compile/run project in the Delphi IDE. 

Downloads

All resources: 		http://dl.dropbox.com/u/2602516/swissrpkg/index.html
On CRAN: 		http://cran.r-project.org/web/packages/xlsReadWrite/index.html
Github repo: 		http://github.com/swissr/xlsReadWrite


5. Links and contact

General info: 		http://www.swissr.org
Bugtracker: 		http://dev.swissr.org/projects/xlsReadWrite
Forum: 		http://dev.swissr.org/projects/xlsReadWrite/boards


November 1, 2010 / Hans-Peter 